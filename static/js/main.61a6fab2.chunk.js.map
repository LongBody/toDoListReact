{"version":3,"sources":["components/Products.js","components/taskForm.js","components/Search.js","components/TaskItems.js","components/tableList.js","components/todoList.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","buyProduct","bind","alert","this","title","price","className","src","imageProduct","href","onClick","Component","TaskForm","closeTaskForm","onChangeForm","event","a","target","name","value","setState","console","log","state","onSubmitForm","preventDefault","OnClearForm","status","id","taskEditing","nextProps","onSubmit","type","onChange","Search","onSearching","onSearch","keyPressed","charCode","keyword","placeholder","aria-label","onKeyPress","TasKItems","onUpdateStatus","task","onDeleteList","onEditList","scope","index","role","TableList","onChangeFilterName","onFilterName","onChangeFilterStatus","onFilterStatus","filterName","filterStatus","taskList","listTasks","map","key","randomstring","require","TodoList","openFormAdd","isDisplayFormAdd","openTaskForm","data","generate","push","findIndex","localStorage","setItem","JSON","stringify","splice","toLowerCase","result","forEach","getItem","tasks","parse","filter","item","kw","indexOf","checkFormAdd","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-haspopup","aria-labelledby","path","App","onChangeState","isActive","elementProducts","pros","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61a6fab2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../scss/Products.scss'\n\n\nclass Product extends Component {\n\n  constructor(props){\n    super(props)\n    this.buyProduct = this.buyProduct.bind(this)\n  }\n\n  buyProduct(){\n    alert(\"Product Name: \"+this.props.title + \"\\nPrice: \" + this.props.price + \"VND\")\n  }\n\nrender(){\n  return (\n\n       <div className=\"col-lg-3 productCard \">\n      \n         <img src={this.props.imageProduct} className=\"img-fluid\" />\n         <div className=\"card-body\">\n           <h5 className=\"card-title title\"> { this.props.title }</h5>\n           <p className=\"card-text\">{ this.props.price } VND</p>\n           <a href=\"#\" className=\"btn btn-primary\" onClick={ this.buyProduct } >Buy</a>\n           <a href=\"#\" className=\"btn btn-success ml-1\">Add to cart</a>\n         </div>\n  \n       </div>\n\n       \n \n\n\n  );\n}\n}\n\nexport default Product;\n","import React, { Component } from 'react';\r\nimport '../scss/taskForm.scss'\r\n\r\n\r\n\r\nclass TaskForm extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      id:'',\r\n      name :'',\r\n      status : true\r\n    }\r\n  }\r\n\r\ncomponentWillMount(){\r\n  let {taskEditing} =this.props\r\n  if(taskEditing){\r\n    this.setState({\r\n      id:taskEditing.id,\r\n      name:taskEditing.name,\r\n      status:taskEditing.status\r\n    })\r\n  }\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps){\r\n  console.log(nextProps)\r\n  if(nextProps && nextProps.taskEditing){\r\n    let taskEditing = nextProps.taskEditing\r\n    this.setState({\r\n      id:taskEditing.id,\r\n      name:taskEditing.name,\r\n      status:taskEditing.status\r\n    })\r\n  }\r\n  else if(!nextProps.taskEditing){\r\n    this.setState({\r\n      id:'',\r\n      name :'',\r\n      status : true\r\n    })\r\n  }\r\n\r\n}\r\n\r\ncloseTaskForm = ()=>{\r\n  this.props.closeTaskForm()\r\n}\r\n\r\nonChangeForm = async (event) =>{\r\n  var target =event.target;\r\n  var name= target.name;\r\n  var value= target.value;\r\n\r\n  this.setState({\r\n    [name] :value\r\n  })\r\n  console.log(this.state)\r\n  \r\n}\r\n  \r\n\r\nonSubmitForm = (event)=>{\r\n  event.preventDefault();\r\n  this.props.onSubmitForm(this.state)\r\n  this.closeTaskForm();\r\n  this.OnClearForm();\r\n}\r\n\r\nOnClearForm = ()=>{\r\n  this.setState({\r\n    name : '',\r\n    status:true\r\n  })\r\n}\r\n\r\n\r\n\r\nrender(){\r\n  let {id} = this.state;\r\n  \r\n  return (\r\n\r\n<div className=\"card\">\r\n  <div className=\"card-header\">\r\n  {id !== '' ? \"Edit Product\" : \"Add Product\"}\r\n    <i className=\"fas fa-times-circle closeIcon\" onClick={this.closeTaskForm} ></i>\r\n  </div>\r\n  <div className=\"card-body\">\r\n    <div className=\"form-group\">\r\n        <form onSubmit = {this.onSubmitForm}>\r\n        <label>Name:</label>\r\n\r\n      <input\r\n         type=\"text\"\r\n         className=\"form-control\"\r\n         name =\"name\"\r\n         value={this.state.name}\r\n         onChange ={this.onChangeForm}\r\n      />\r\n\r\n      <label >Status:</label>\r\n      <select className=\"form-control form-control\" name=\"status\" value={this.state.status} onChange ={this.onChangeForm}>\r\n     <option value={true}>Active</option>\r\n     <option value={false}>Limit</option>\r\n     </select>\r\n     <div className=\"mt-3\">\r\n     <button type=\"submit\" className=\"btn btn-warning btn-sm\">Save</button>\r\n      <button type=\"button\" className=\"btn btn-danger btn-sm ml-1\" onClick ={this.OnClearForm}>Cancel</button>\r\n     </div>\r\n        </form>\r\n     \r\n    </div>\r\n  </div>\r\n</div>\r\n  \r\n  \r\n\r\n       \r\n \r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      keyword :''\r\n    }\r\n  }\r\n\r\n  onChange = (event)=>{\r\n    let target = event.target;\r\n    let name = target.name;\r\n    let value =target.value;\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n\r\n  onSearching= () =>{\r\n    this.props.onSearch(this.state)   \r\n  }\r\n\r\n  keyPressed =(event)=>{\r\n\r\n    if (event.charCode == 13) {\r\n      event.preventDefault();\r\n      this.props.onSearch(this.state) \r\n    } \r\n \r\n  }\r\n\r\n\r\nrender(){\r\n  let { keyword } =this.state\r\n  return (\r\n\r\n       <div>\r\n           <form className=\"form-inline d-flex justify-content-center md-form form-sm active-cyan-2 mt-2\">\r\n             <input className=\"form-control form-control-sm mr-2 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n              name=\"keyword\" \r\n              value ={ keyword }\r\n               onChange={ this.onChange }\r\n               onKeyPress={ this.keyPressed }\r\n               />\r\n             <i className=\"fas fa-search\" onClick={this.onSearching}/>\r\n             <button type=\"button\" className=\"btn btn-primary btn-sm ml-4\">Arrange</button>        \r\n           </form>        \r\n       </div>\r\n\r\n       \r\n \r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport '../scss/tableList.scss'\r\n\r\n\r\n\r\n\r\n\r\nclass TasKItems extends Component {\r\n  \r\n  onUpdateStatus =() =>{\r\n    this.props.onUpdateStatus(this.props.task.id)\r\n  }\r\n\r\n  onDeleteList = ()=>{\r\n    this.props.onDeleteList(this.props.task.id)\r\n  }\r\n\r\n  onEditList = ()=>{\r\n    this.props.onEditList(this.props.task.id)\r\n  }\r\n\r\nrender(){\r\n    \r\n  return (\r\n<tr>    \r\n\r\n        <td scope=\"row\">{this.props.index}</td>\r\n        <td >{this.props.name}</td>\r\n        <td className=\"CenterActiveLimit\">\r\n        <div role=\"alert\" \r\n        className={this.props.status === true ?\r\n         \"badge badge-success fontSizeListActiveLimit \" :\r\n          \"badge badge-danger fontSizeListActiveLimit\"} \r\n        onClick ={this.onUpdateStatus}\r\n          >\r\n        {this.props.status === true ? \"Active\" : \"Limit\"}\r\n       \r\n       </div>\r\n         \r\n          </td>\r\n        <td>\r\n          <button type=\"button\" className=\"btn btn-warning btn-sm mr-1\" onClick={ this.onEditList }><i className=\"far fa-edit\"></i> Edit</button>\r\n          <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={ this.onDeleteList }><i className=\"far fa-trash-alt\"></i> Delete</button>\r\n        </td>\r\n      </tr>\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default TasKItems;\r\n","import React, { Component } from 'react';\r\nimport TasKItems from '../components/TaskItems';\r\nimport '../scss/tableList.scss'\r\n\r\n\r\n\r\nclass TableList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      filterName :'',\r\n      filterStatus :\"Show All\"\r\n    }\r\n  }\r\n\r\n\r\n  onChangeFilterName= (event)=>{\r\n    let target =event.target;\r\n    let name = target.name;\r\n    let value = target.value;\r\n    this.props.onFilterName(value);\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n\r\n  onChangeFilterStatus= (event)=>{\r\n    let target =event.target;\r\n    let name = target.name;\r\n    let value = target.value;\r\n    this.props.onFilterStatus(value);\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n\r\nrender(){\r\n    var task =this.props.taskList;\r\n    let {filterName ,filterStatus } =this.state;\r\n    let listTasks=  task.map((task , index) =>{\r\n      return <TasKItems \r\n        key ={task.id}\r\n        index ={index+1}\r\n         name ={task.name}\r\n         status ={task.status}\r\n         task ={task}\r\n         onUpdateStatus ={ this.props.onUpdateStatus }\r\n         onDeleteList ={ this.props.onDeleteList }\r\n         onEditList ={ this.props.onEditList }\r\n         >\r\n         </TasKItems>\r\n    })\r\n  return (\r\n \r\n<div>\r\n  <table className=\"table table-bordered mt-3\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Status</th>\r\n        <th>Action</th>    \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td scope=\"row\" />\r\n        <td>\r\n          <input type=\"text\" className=\"form-control\" name=\"filterName\" value ={filterName} onChange ={this.onChangeFilterName}/>\r\n        </td>\r\n        <td>\r\n            <select className=\"form-control form-control\" name=\"filterStatus\" value ={filterStatus} onChange ={this.onChangeFilterStatus}>\r\n                <option>Show all</option>\r\n                <option>Active</option>\r\n                <option>Limit</option>\r\n            </select>\r\n        </td>\r\n        <td />\r\n      </tr>\r\n      {listTasks}\r\n     \r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n  \r\n\r\n       \r\n \r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default TableList;\r\n","import React, { Component } from 'react';\r\nimport TaskForm from '../components/taskForm'\r\nimport Searching from '../components/Search'\r\nimport TableList from '../components/tableList'\r\n\r\n\r\nvar randomstring = require(\"randomstring\");\r\n\r\nclass TodoList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            task :[],\r\n            isDisplayFormAdd :false,\r\n            taskEditing :null,\r\n            filterName : '',\r\n            filterStatus : \"Show All\",\r\n            keyword :''\r\n        }\r\n    }\r\n    componentWillMount(){\r\n\r\n        if(localStorage && localStorage.getItem(\"tasks\")){\r\n            var tasks =JSON.parse(localStorage.getItem(\"tasks\"));\r\n            this.setState(\r\n                {\r\n                    task : tasks\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    openFormAdd= ()=>{\r\n        if(this.state.isDisplayFormAdd && this.state.taskEditing ===null){\r\n            this.setState({\r\n                isDisplayFormAdd :true,\r\n                \r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isDisplayFormAdd :true,\r\n                \r\n                              \r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    closeTaskForm = ()=>{\r\n        this.setState({\r\n            isDisplayFormAdd :false\r\n        })\r\n    }\r\n\r\n\r\n    openTaskForm = ()=>{\r\n        this.setState({\r\n            isDisplayFormAdd :true\r\n        })\r\n    }\r\n\r\n\r\n    onSubmitForm = async (data)=>{\r\n        var {task} = this.state;     \r\n       \r\n\r\n        if(data.id === ''){\r\n            data.id= await randomstring.generate(7);\r\n            task.push(data);\r\n        } else {\r\n            var index = this.findIndex(data.id);\r\n            task[index] = data\r\n        }\r\n         \r\n       \r\n        this.setState({\r\n            task : task,\r\n            taskEditing :null\r\n\r\n        })\r\n        console.log(task)\r\n        localStorage.setItem(\"tasks\" , JSON.stringify(task))\r\n    }\r\n\r\n    onUpdateStatus = (id)=>{\r\n        let {task} =this.state ;\r\n        let index =this.findIndex(id);\r\n        if(index !== -1){\r\n            task[index].status = ! task[index].status \r\n            this.setState({\r\n                task:task\r\n            })\r\n        }\r\n        localStorage.setItem(\"tasks\",JSON.stringify(task))\r\n    }\r\n\r\n    onDeleteList = (id) =>{\r\n        console.log(id)\r\n        let {task} =this.state ;\r\n        let index =this.findIndex(id);\r\n        if(index !== -1){\r\n            task.splice(index ,1)\r\n            this.setState({\r\n                task:task\r\n            })\r\n        }\r\n        localStorage.setItem(\"tasks\",JSON.stringify(task))\r\n        this.closeTaskForm();\r\n    }\r\n    onEditList = (id) =>{\r\n        console.log(id)\r\n        let {task} =this.state ;\r\n        let index =this.findIndex(id);\r\n        let taskEditing = task[index] ;\r\n        this.setState({\r\n            taskEditing : taskEditing\r\n        })\r\n        this.openFormAdd();\r\n    }\r\n\r\n    onFilterName = (name)=>{\r\n        this.setState({\r\n            filterName:name.toLowerCase()\r\n        })\r\n    }\r\n\r\n    onFilterStatus = (status)=>{\r\n        this.setState({\r\n            filterStatus:status\r\n        })\r\n    }\r\n    onSearch =(keyword)=>{\r\n        this.setState({\r\n            keyword:keyword\r\n        })\r\n    }\r\n\r\n    findIndex=(id) =>{\r\n        let result = -1;\r\n        let {task} = this.state;\r\n        task.forEach((task ,index) =>{\r\n            if(task.id === id){\r\n                return result = index\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n\r\nrender(){\r\n    var {task , isDisplayFormAdd ,taskEditing ,filterName ,filterStatus ,keyword} =this.state\r\n\r\n    if(keyword){\r\n        task = task.filter((item) => {\r\n            let kw= keyword.keyword.toLowerCase();\r\n            \r\n            return item.name.toLowerCase().indexOf(kw) !== -1\r\n        })\r\n        console.log(task)\r\n     }\r\n\r\n    if(filterName){\r\n        task =task.filter((item) => {\r\n            return item.name.toLowerCase().indexOf(filterName) !== -1\r\n        })\r\n    }\r\n    \r\n    if(filterStatus){   \r\n        if(filterStatus === \"Active\")\r\n        task =task.filter((item) => {\r\n            return item.status === true\r\n        })\r\n        else if(filterStatus === \"Limit\"){\r\n            task =task.filter((item) => {\r\n                return item.status === false || item.status === \"false\"\r\n            })\r\n        }\r\n     }\r\n\r\n    \r\n     \r\n    let checkFormAdd = isDisplayFormAdd  ? <TaskForm\r\n                                             closeTaskForm={this.closeTaskForm}\r\n                                             onSubmitForm = {this.onSubmitForm} \r\n                                             taskEditing ={taskEditing}                                           \r\n                                             /> : \"\"\r\n  return (\r\n\r\n       <div className=\"container mt-3 mb-2\">\r\n           <div className=\"row\">\r\n               <div className=\"col-lg-4\">\r\n                {checkFormAdd}\r\n               \r\n               </div>\r\n               <div className={isDisplayFormAdd ? \"col-lg-8\" : \"col-lg-12\"}>\r\n               \r\n               <Searching onSearch ={ this.onSearch }/>\r\n               <button type=\"button\" className=\"btn btn-primary btn-sm mt-2\" onClick={this.openFormAdd}>+ Add Product</button> \r\n               <TableList taskList ={task}\r\n                          onUpdateStatus = {this.onUpdateStatus}\r\n                          onDeleteList={this.onDeleteList}\r\n                          onEditList ={this.onEditList }\r\n                          onFilterName ={this.onFilterName}\r\n                          onFilterStatus ={this.onFilterStatus}\r\n                           />    \r\n               </div>\r\n           </div>\r\n           \r\n       </div>\r\n\r\n       \r\n \r\n\r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport '../scss/Header.scss'\r\nimport TodoList from '../components/todoList'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <Router>\r\n    <div>\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <Link to=\"/home\" className=\"navbar-brand\">PhoneX</Link>\r\n      <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Phone</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Gear</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Products</a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n              <a className=\"dropdown-item\" href=\"#\">Iphone</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Sam Sung</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Xiao Mi</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Oppo</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link to=\"/todoList\" className=\"nav-link\">TodoList</Link>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n          <button className=\"btn btn-outline-info my-2 my-sm-0 mr-4\" type=\"submit\">Search</button>\r\n        </form> \r\n        <div className=\"cart mr-3\">\r\n            <i className=\"fas fa-shopping-cart \"></i>\r\n            <span className=\"numberCart\">0</span>\r\n        </div>       \r\n      </div>\r\n    </nav>\r\n  </div>\r\n\r\n\r\n\r\n         <Switch>\r\n\r\n          <Route path=\"/todoList\">\r\n            <TodoList/>\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\nimport Product from './components/Products'\nimport Header from './components/Header'\nimport Search from './components/Search'\n\n\nclass App extends Component  {\n\n  constructor(props){\n    super(props)\n    this.state ={\n      isActive : true\n    }\n  };\n\n\n  onChangeState = () =>{\n    this.setState({\n      isActive : !this.state.isActive,\n    })\n  }\n\n  render(){\n\n  let products =[\n    {\n      id:0,\n      name:\"Iphone 6\",\n      price:\"6.990.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/92962/iphone-6-32gb-gold-hh-600x600-600x600-600x600.jpg\",\n      status:true\n    },\n    {\n      id:1,\n      name:\"Iphone 7\",\n      price:\"8.400.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/74110/iphone-7-gold-600x600.jpg\",\n      status:true\n    },\n    {\n      id:2,\n      name:\"XiaoMi Note 10\",\n      price:\"12.599.000\",\n      imageProduct:\"https://cdn.fptshop.com.vn/Uploads/Originals/2019/11/8/637088187039672366_xiaomi-mi-note-10-1.png\",\n      status:true\n    },\n    {\n      id:3,\n      name:\"Galaxy 20 Ultra\",\n      price:\"21.900.000\" ,\n      imageProduct:\"https://cdn.fptshop.com.vn/Uploads/Originals/2020/2/12/637170929984611739_ss-s20-xam-1.png\",\n      status:true\n    },\n    {\n      id:4,\n      name:\"Galaxy Note 9\",\n      price:\"23.690.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/183507/samsung-galaxy-note-9-512gb-blue-600x600.jpg\",\n      status:true\n    },\n    {\n      id:5,\n      name:\"Iphone 8\",\n      price:\"9.999.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/114113/iphone-8-64gb-hh-600x600.jpg\",\n      status:true\n    },\n    {\n      id:6,\n      name:\"Iphone XS\",\n      price:\"19.900.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/190323/iphone-xs-gold-600x600.jpg\",\n      status:true\n    },\n    {\n      id:7,\n      name:\"XiaoMi Note 10\",\n      price:\"23.799.000\",\n      imageProduct:\"https://cdn.tgdd.vn/Products/Images/42/197228/huawei-p30-pro-1-600x600.jpg\",\n      status:true\n    },\n\n  ]\n\n \n\n\n  let elementProducts = products.map((pros,index )=>{\n      return  <Product \n               key= {pros.id}\n               price ={pros.price}\n               title ={pros.name}\n               imageProduct ={pros.imageProduct}\n               >\n              </Product>\n  })\n\n\n  return (\n    <div className=\"App\">\n      <Header/>\n\n      <div className=\"container\">\n        <div className=\"row\"> \n        {elementProducts}\n         </div>\n  <button type=\"button\" className=\"btn btn-primary\" onClick={this.onChangeState}> Click : {this.state.isActive === true ? \"True\" : \"False\" }</button>\n      </div>\n\n    </div>\n  \n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}